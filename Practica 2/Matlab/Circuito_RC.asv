clear all;
close all;

% Parámetros del circuito
global R Rc Rf Rl Rml E L C

E=5;
L = 2.37e-3;
Rf = 50;
Rml = 100;
Rl = 0.8;
Rc = 100;
R = 10e3;
C = 0.3e-6;

% Condiciones iniciales
IL0 = E/(R+Rl+Rml+Rf);
Vc0 = (E*R)/(R+Rl+Rml+Rf);
Y0 = [0; 0];

% Parámetros de la simulación
frecuencia = 935.5;
periodo = 1/frecuencia;
dt_cerrado = periodo/2; % Duración del circuito con señal escalón activa
dt_abierto = periodo/2; % Duración del circuito con señal escalón inactiva
period_total = dt_cerrado + dt_abierto; % Periodo total

% Tiempo total de simulación
n_intervals = 4; % Número total de intervalos

results_t = [];
results_Il = [];
results_Vc = [];

for i = 1:n_intervals
    % Determinar el tiempo de inicio y fin del intervalo
    t_start = (i - 1) * period_total;
    t_end_cerrado = t_start + dt_cerrado; % Fin del intervalo cerrado
    t_end_abierto = t_start + period_total; % Fin del intervalo abierto
    

    % Resolver el sistema para el intervalo cerrado
    [t_cerrado, Y_cerrado] = ode23(@(t, Y) ec_differential(t,Y,E,1), [t_start, t_end_cerrado], Y0);

    % Obtener los valores de Il_t y Vc_t al final del intervalo cerrado
    Vc_t_final = Y_cerrado(end, 1);
    Il_t_final = Y_cerrado(end, 2);
    

    % Imprimir los valores
    fprintf('Intervalo %d - Valor final de Il_t: %.4f\n', i, Il_t_final);
    fprintf('Intervalo %d - Valor final de Vc_t: %.4f\n', i, Vc_t_final);

    % Resolver el sistema para el intervalo abierto
    [t_abierto, Y_abierto] = ode23(@(t, Y) ec_differential(t,Y,E,-1), [t_end_cerrado, t_end_abierto], [Il_t_final,Vc_t_final]);

    % Almacenar resultados
    results_t = [results_t; t_cerrado; t_abierto];
    results_Il = [results_Il; [t_cerrado, Y_cerrado(:, 2); t_abierto, Y_abierto(:, 2)]];
    results_Vc = [results_Vc; [t_cerrado, Y_cerrado(:, 1); t_abierto, Y_abierto(:, 1)]];
    
    % Actualizar el estado inicial para el próximo ciclo
    Y0 = Y_abierto(end, :); % La última solución se convierte en el nuevo estado inicial
end
% Graficar la solución en subgráficas
figure;

% Subgráfica para Il_t
subplot(2, 1, 1);
plot(results_t(:,1), results_Il(:,2));
xlabel('Tiempo');
ylabel('Il_t');
title('Corriente Il_t');

% Subgráfica para Vc_t
subplot(2, 1, 2);
plot(results_Vc(:,1), results_Vc(:,2));
xlabel('Tiempo');
ylabel('Vc_t');
title('Voltaje Vc_t');